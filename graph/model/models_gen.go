// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Query struct {
}

type StringComparisonExp struct {
	Eq       *string  `json:"_eq,omitempty"`
	Gt       *string  `json:"_gt,omitempty"`
	Gte      *string  `json:"_gte,omitempty"`
	Ilike    *string  `json:"_ilike,omitempty"`
	In       []string `json:"_in,omitempty"`
	Iregex   *string  `json:"_iregex,omitempty"`
	IsNull   *bool    `json:"_is_null,omitempty"`
	Like     *string  `json:"_like,omitempty"`
	Lt       *string  `json:"_lt,omitempty"`
	Lte      *string  `json:"_lte,omitempty"`
	Neq      *string  `json:"_neq,omitempty"`
	Nilike   *string  `json:"_nilike,omitempty"`
	Nin      []string `json:"_nin,omitempty"`
	Niregex  *string  `json:"_niregex,omitempty"`
	Nlike    *string  `json:"_nlike,omitempty"`
	Nregex   *string  `json:"_nregex,omitempty"`
	Nsimilar *string  `json:"_nsimilar,omitempty"`
	Regex    *string  `json:"_regex,omitempty"`
	Similar  *string  `json:"_similar,omitempty"`
}

type Thing struct {
	Amount  *string `json:"amount,omitempty"`
	Created string  `json:"created"`
	ID      string  `json:"id"`
	Name    *string `json:"name,omitempty"`
}

type SmallintComparisonExp struct {
	Eq     *string  `json:"_eq,omitempty"`
	Gt     *string  `json:"_gt,omitempty"`
	Gte    *string  `json:"_gte,omitempty"`
	In     []string `json:"_in,omitempty"`
	IsNull *bool    `json:"_is_null,omitempty"`
	Lt     *string  `json:"_lt,omitempty"`
	Lte    *string  `json:"_lte,omitempty"`
	Neq    *string  `json:"_neq,omitempty"`
	Nin    []string `json:"_nin,omitempty"`
}

type ThingsBoolExp struct {
	And     []*ThingsBoolExp          `json:"_and,omitempty"`
	Not     *ThingsBoolExp            `json:"_not,omitempty"`
	Or      []*ThingsBoolExp          `json:"_or,omitempty"`
	Amount  *SmallintComparisonExp    `json:"amount,omitempty"`
	Created *TimestamptzComparisonExp `json:"created,omitempty"`
	ID      *UUIDComparisonExp        `json:"id,omitempty"`
	Name    *StringComparisonExp      `json:"name,omitempty"`
}

type TimestamptzComparisonExp struct {
	Eq     *string  `json:"_eq,omitempty"`
	Gt     *string  `json:"_gt,omitempty"`
	Gte    *string  `json:"_gte,omitempty"`
	In     []string `json:"_in,omitempty"`
	IsNull *bool    `json:"_is_null,omitempty"`
	Lt     *string  `json:"_lt,omitempty"`
	Lte    *string  `json:"_lte,omitempty"`
	Neq    *string  `json:"_neq,omitempty"`
	Nin    []string `json:"_nin,omitempty"`
}

type UUIDComparisonExp struct {
	Eq     *string  `json:"_eq,omitempty"`
	Gt     *string  `json:"_gt,omitempty"`
	Gte    *string  `json:"_gte,omitempty"`
	In     []string `json:"_in,omitempty"`
	IsNull *bool    `json:"_is_null,omitempty"`
	Lt     *string  `json:"_lt,omitempty"`
	Lte    *string  `json:"_lte,omitempty"`
	Neq    *string  `json:"_neq,omitempty"`
	Nin    []string `json:"_nin,omitempty"`
}
